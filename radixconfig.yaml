apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: webwiz-subsurface-on-radix
spec:
  environments:
    - name: dev
      build:
        from: master
    - name: blobfuse
      build:
        from: blobfuse
  components:
    - name: auth
      image: quay.io/pusher/oauth2_proxy:v4.1.0 # see https://pusher.github.io/oauth2_proxy/configuration
      ports:
        - name: http
          port: 8000
      publicPort: http
      secrets:
        - OAUTH2_PROXY_CLIENT_SECRET # Azure client secret for AD app for the appropriate cluster
        - OAUTH2_PROXY_COOKIE_SECRET # Output of `python -c 'import os,base64; print base64.urlsafe_b64encode(os.urandom(16))'`
        - OAUTH2_PROXY_REDIRECT_URL # Should be "https://<PUBLIC_URL>/oauth2/callback". This is a secret so it can be configured per cluster, but it's not sensitive info
      variables:
        OAUTH2_PROXY_COOKIE_REFRESH: "60m" # How often should the token be refreshed. Default for azure ad is currently 60m
        OAUTH2_PROXY_EMAIL_DOMAINS: "*" # Any email address registered in AD should be accepted
        OAUTH2_PROXY_HTTP_ADDRESS: "http://:8000" # The port oauth2_proxy listens on
        OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0" # That's the Equinor tenant ID
        OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true" # Pass the access token upstream (to the proxy component)
        OAUTH2_PROXY_PASS_BASIC_AUTH: "false" # Disable unused default
        OAUTH2_PROXY_PASS_USER_HEADERS: "false" # Disable unused default
        OAUTH2_PROXY_PROVIDER: "oidc" # The "azure" provider doesn't seem to work properly
        OAUTH2_PROXY_REDIS_CONNECTION_URL: "redis://auth-state:6379" # Where to store session info (the auth-state component)
        OAUTH2_PROXY_SESSION_STORE_TYPE: "redis" # We're using Redis for storing session info instead of cookies (cookies would get too big)
        OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true" # We don't want a "click to login" page; just issue a redirect
        OAUTH2_PROXY_UPSTREAMS: "http://main:5000" # Where authenticated requests are routed to: the web component (nginx)
      environmentConfig:
        - environment: dev
          variables:
            OAUTH2_PROXY_SCOPE: openid email offline_access
            OAUTH2_PROXY_CLIENT_ID: 4aac8ce4-07e0-4a63-a06e-1235037e4d9c
        - environment: blobfuse
          variables:
            OAUTH2_PROXY_SCOPE: openid email offline_access
            OAUTH2_PROXY_CLIENT_ID: 4aac8ce4-07e0-4a63-a06e-1235037e4d9c

    - name: auth-state
      image: redis:5-alpine
      ports:
        - name: redis
          port: 6379

    - name: main
      src: "."
      ports:
        - name: http
          port: 5000
      secrets:
        - AZURE_STORAGE_CONNECTION_STRING
        - AZURE_STORAGE_CONTAINER_NAME
        - AZURE_STORAGE_CONTAINER_PATH
      environmentConfig:
        - environment: dev
          resources:
            requests:
              memory: "400Mi"
              cpu: "100m"
            limits:
              memory: "4G"
              cpu: "1000m"
        - environment: blobfuse
          resources:
            requests:
              memory: "400Mi"
              cpu: "100m"
            limits:
              memory: "4G"
              cpu: "1000m"
  dnsAppAlias:
    environment: dev
    component: auth
